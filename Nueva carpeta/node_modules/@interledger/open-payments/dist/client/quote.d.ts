import { ResponseValidator } from '@interledger/openapi';
import { ResourceRequestArgs, BaseDeps, RouteDeps } from '.';
import { CreateQuoteArgs, Quote } from '../types';
export interface QuoteRoutes {
    get(args: ResourceRequestArgs): Promise<Quote>;
    create(createArgs: ResourceRequestArgs, createQuoteArgs: CreateQuoteArgs): Promise<Quote>;
}
export declare const createQuoteRoutes: (deps: RouteDeps) => QuoteRoutes;
export declare const getQuote: (deps: BaseDeps, args: ResourceRequestArgs, validateOpenApiResponse: ResponseValidator<Quote>) => Promise<{
    readonly id: string;
    readonly walletAddress: string;
    receiver: import("../openapi/generated/resource-server-types").components["schemas"]["receiver"];
    receiveAmount: import("../openapi/generated/resource-server-types").components["schemas"]["amount"];
    debitAmount: import("../openapi/generated/resource-server-types").components["schemas"]["amount"];
    method: import("../openapi/generated/resource-server-types").components["schemas"]["payment-method"];
    readonly expiresAt?: string;
    createdAt: string;
}>;
export declare const createQuote: (deps: BaseDeps, createArgs: ResourceRequestArgs, validateOpenApiResponse: ResponseValidator<Quote>, createQuoteArgs: CreateQuoteArgs) => Promise<{
    readonly id: string;
    readonly walletAddress: string;
    receiver: import("../openapi/generated/resource-server-types").components["schemas"]["receiver"];
    receiveAmount: import("../openapi/generated/resource-server-types").components["schemas"]["amount"];
    debitAmount: import("../openapi/generated/resource-server-types").components["schemas"]["amount"];
    method: import("../openapi/generated/resource-server-types").components["schemas"]["payment-method"];
    readonly expiresAt?: string;
    createdAt: string;
}>;
