{"version":3,"file":"structured-header.min.js","mappings":"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","sources":["webpack://structuredHeader/./dist/index.js","webpack://structuredHeader/./dist/parser.js","webpack://structuredHeader/./dist/serializer.js","webpack://structuredHeader/./dist/token.js","webpack://structuredHeader/./dist/types.js","webpack://structuredHeader/./dist/util.js","webpack://structuredHeader/webpack/bootstrap","webpack://structuredHeader/webpack/startup"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Token = void 0;\n__exportStar(require(\"./serializer\"), exports);\n__exportStar(require(\"./parser\"), exports);\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./util\"), exports);\nvar token_1 = require(\"./token\");\nObject.defineProperty(exports, \"Token\", { enumerable: true, get: function () { return token_1.Token; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParseError = exports.parseItem = exports.parseList = exports.parseDictionary = void 0;\nconst types_1 = require(\"./types\");\nconst token_1 = require(\"./token\");\nconst util_1 = require(\"./util\");\nfunction parseDictionary(input) {\n    const parser = new Parser(input);\n    return parser.parseDictionary();\n}\nexports.parseDictionary = parseDictionary;\nfunction parseList(input) {\n    const parser = new Parser(input);\n    return parser.parseList();\n}\nexports.parseList = parseList;\nfunction parseItem(input) {\n    const parser = new Parser(input);\n    return parser.parseItem();\n}\nexports.parseItem = parseItem;\nclass ParseError extends Error {\n    constructor(position, message) {\n        super(`Parse error: ${message} at offset ${position}`);\n    }\n}\nexports.ParseError = ParseError;\nclass Parser {\n    constructor(input) {\n        this.input = input;\n        this.pos = 0;\n    }\n    parseDictionary() {\n        this.skipWS();\n        const dictionary = new Map();\n        while (!this.eof()) {\n            const thisKey = this.parseKey();\n            let member;\n            if (this.lookChar() === '=') {\n                this.pos++;\n                member = this.parseItemOrInnerList();\n            }\n            else {\n                member = [true, this.parseParameters()];\n            }\n            dictionary.set(thisKey, member);\n            this.skipOWS();\n            if (this.eof()) {\n                return dictionary;\n            }\n            this.expectChar(',');\n            this.pos++;\n            this.skipOWS();\n            if (this.eof()) {\n                throw new ParseError(this.pos, 'Dictionary contained a trailing comma');\n            }\n        }\n        return dictionary;\n    }\n    parseList() {\n        this.skipWS();\n        const members = [];\n        while (!this.eof()) {\n            members.push(this.parseItemOrInnerList());\n            this.skipOWS();\n            if (this.eof()) {\n                return members;\n            }\n            this.expectChar(',');\n            this.pos++;\n            this.skipOWS();\n            if (this.eof()) {\n                throw new ParseError(this.pos, 'A list may not end with a trailing comma');\n            }\n        }\n        return members;\n    }\n    parseItem(standaloneItem = true) {\n        if (standaloneItem)\n            this.skipWS();\n        const result = [\n            this.parseBareItem(),\n            this.parseParameters()\n        ];\n        if (standaloneItem)\n            this.checkTrail();\n        return result;\n    }\n    parseItemOrInnerList() {\n        if (this.lookChar() === '(') {\n            return this.parseInnerList();\n        }\n        else {\n            return this.parseItem(false);\n        }\n    }\n    parseInnerList() {\n        this.expectChar('(');\n        this.pos++;\n        const innerList = [];\n        while (!this.eof()) {\n            this.skipWS();\n            if (this.lookChar() === ')') {\n                this.pos++;\n                return [\n                    innerList,\n                    this.parseParameters()\n                ];\n            }\n            innerList.push(this.parseItem(false));\n            const nextChar = this.lookChar();\n            if (nextChar !== ' ' && nextChar !== ')') {\n                throw new ParseError(this.pos, 'Expected a whitespace or ) after every item in an inner list');\n            }\n        }\n        throw new ParseError(this.pos, 'Could not find end of inner list');\n    }\n    parseBareItem() {\n        const char = this.lookChar();\n        if (char.match(/^[-0-9]/)) {\n            return this.parseIntegerOrDecimal();\n        }\n        if (char === '\"') {\n            return this.parseString();\n        }\n        if (char.match(/^[A-Za-z*]/)) {\n            return this.parseToken();\n        }\n        if (char === ':') {\n            return this.parseByteSequence();\n        }\n        if (char === '?') {\n            return this.parseBoolean();\n        }\n        throw new ParseError(this.pos, 'Unexpected input');\n    }\n    parseParameters() {\n        const parameters = new Map();\n        while (!this.eof()) {\n            const char = this.lookChar();\n            if (char !== ';') {\n                break;\n            }\n            this.pos++;\n            this.skipWS();\n            const key = this.parseKey();\n            let value = true;\n            if (this.lookChar() === '=') {\n                this.pos++;\n                value = this.parseBareItem();\n            }\n            parameters.set(key, value);\n        }\n        return parameters;\n    }\n    parseIntegerOrDecimal() {\n        let type = 'integer';\n        let sign = 1;\n        let inputNumber = '';\n        if (this.lookChar() === '-') {\n            sign = -1;\n            this.pos++;\n        }\n        // The spec wants this check but it's unreachable code.\n        //if (this.eof()) {\n        //  throw new ParseError(this.pos, 'Empty integer');\n        //}\n        if (!isDigit(this.lookChar())) {\n            throw new ParseError(this.pos, 'Expected a digit (0-9)');\n        }\n        while (!this.eof()) {\n            const char = this.getChar();\n            if (isDigit(char)) {\n                inputNumber += char;\n            }\n            else if (type === 'integer' && char === '.') {\n                if (inputNumber.length > 12) {\n                    throw new ParseError(this.pos, 'Exceeded maximum decimal length');\n                }\n                inputNumber += '.';\n                type = 'decimal';\n            }\n            else {\n                // We need to 'prepend' the character, so it's just a rewind\n                this.pos--;\n                break;\n            }\n            if (type === 'integer' && inputNumber.length > 15) {\n                throw new ParseError(this.pos, 'Exceeded maximum integer length');\n            }\n            if (type === 'decimal' && inputNumber.length > 16) {\n                throw new ParseError(this.pos, 'Exceeded maximum decimal length');\n            }\n        }\n        if (type === 'integer') {\n            return parseInt(inputNumber, 10) * sign;\n        }\n        else {\n            if (inputNumber.endsWith('.')) {\n                throw new ParseError(this.pos, 'Decimal cannot end on a period');\n            }\n            if (inputNumber.split('.')[1].length > 3) {\n                throw new ParseError(this.pos, 'Number of digits after the decimal point cannot exceed 3');\n            }\n            return parseFloat(inputNumber) * sign;\n        }\n    }\n    parseString() {\n        let outputString = '';\n        this.expectChar('\"');\n        this.pos++;\n        while (!this.eof()) {\n            const char = this.getChar();\n            if (char === '\\\\') {\n                if (this.eof()) {\n                    throw new ParseError(this.pos, 'Unexpected end of input');\n                }\n                const nextChar = this.getChar();\n                if (nextChar !== '\\\\' && nextChar !== '\"') {\n                    throw new ParseError(this.pos, 'A backslash must be followed by another backslash or double quote');\n                }\n                outputString += nextChar;\n            }\n            else if (char === '\"') {\n                return outputString;\n            }\n            else if (!(0, util_1.isAscii)(char)) {\n                throw new Error('Strings must be in the ASCII range');\n            }\n            else {\n                outputString += char;\n            }\n        }\n        throw new ParseError(this.pos, 'Unexpected end of input');\n    }\n    parseToken() {\n        // The specification wants this check, but it's an unreachable code block.\n        // if (!/^[A-Za-z*]/.test(this.lookChar())) {\n        //  throw new ParseError(this.pos, 'A token must begin with an asterisk or letter (A-Z, a-z)');\n        //}\n        let outputString = '';\n        while (!this.eof()) {\n            const char = this.lookChar();\n            if (!/^[:/!#$%&'*+\\-.^_`|~A-Za-z0-9]$/.test(char)) {\n                return new token_1.Token(outputString);\n            }\n            outputString += this.getChar();\n        }\n        return new token_1.Token(outputString);\n    }\n    parseByteSequence() {\n        this.expectChar(':');\n        this.pos++;\n        const endPos = this.input.indexOf(':', this.pos);\n        if (endPos === -1) {\n            throw new ParseError(this.pos, 'Could not find a closing \":\" character to mark end of Byte Sequence');\n        }\n        const b64Content = this.input.substring(this.pos, endPos);\n        this.pos += b64Content.length + 1;\n        if (!/^[A-Za-z0-9+/=]*$/.test(b64Content)) {\n            throw new ParseError(this.pos, 'ByteSequence does not contain a valid base64 string');\n        }\n        return new types_1.ByteSequence(b64Content);\n    }\n    parseBoolean() {\n        this.expectChar('?');\n        this.pos++;\n        const char = this.getChar();\n        if (char === '1') {\n            return true;\n        }\n        if (char === '0') {\n            return false;\n        }\n        throw new ParseError(this.pos, 'Unexpected character. Expected a \"1\" or a \"0\"');\n    }\n    parseKey() {\n        if (!this.lookChar().match(/^[a-z*]/)) {\n            throw new ParseError(this.pos, 'A key must begin with an asterisk or letter (a-z)');\n        }\n        let outputString = '';\n        while (!this.eof()) {\n            const char = this.lookChar();\n            if (!/^[a-z0-9_\\-.*]$/.test(char)) {\n                return outputString;\n            }\n            outputString += this.getChar();\n        }\n        return outputString;\n    }\n    /**\n     * Looks at the next character without advancing the cursor.\n     */\n    lookChar() {\n        return this.input[this.pos];\n    }\n    /**\n     * Checks if the next character is 'char', and fail otherwise.\n     */\n    expectChar(char) {\n        if (this.lookChar() !== char) {\n            throw new ParseError(this.pos, `Expected ${char}`);\n        }\n    }\n    getChar() {\n        return this.input[this.pos++];\n    }\n    eof() {\n        return this.pos >= this.input.length;\n    }\n    // Advances the pointer to skip all whitespace.\n    skipOWS() {\n        while (true) {\n            const c = this.input.substr(this.pos, 1);\n            if (c === ' ' || c === '\\t') {\n                this.pos++;\n            }\n            else {\n                break;\n            }\n        }\n    }\n    // Advances the pointer to skip all spaces\n    skipWS() {\n        while (this.lookChar() === ' ') {\n            this.pos++;\n        }\n    }\n    // At the end of parsing, we need to make sure there are no bytes after the\n    // header except whitespace.\n    checkTrail() {\n        this.skipWS();\n        if (!this.eof()) {\n            throw new ParseError(this.pos, 'Unexpected characters at end of input');\n        }\n    }\n}\nexports.default = Parser;\nconst isDigitRegex = /^[0-9]$/;\nfunction isDigit(char) {\n    return isDigitRegex.test(char);\n}\n//# sourceMappingURL=parser.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serializeKey = exports.serializeParameters = exports.serializeToken = exports.serializeByteSequence = exports.serializeBoolean = exports.serializeString = exports.serializeDecimal = exports.serializeInteger = exports.serializeBareItem = exports.serializeInnerList = exports.serializeItem = exports.serializeDictionary = exports.serializeList = exports.SerializeError = void 0;\nconst types_1 = require(\"./types\");\nconst token_1 = require(\"./token\");\nconst util_1 = require(\"./util\");\nclass SerializeError extends Error {\n}\nexports.SerializeError = SerializeError;\nfunction serializeList(input) {\n    return input.map(value => {\n        if ((0, util_1.isInnerList)(value)) {\n            return serializeInnerList(value);\n        }\n        else {\n            return serializeItem(value);\n        }\n    }).join(', ');\n}\nexports.serializeList = serializeList;\nfunction serializeDictionary(input) {\n    return Array.from(input.entries()).map(([key, value]) => {\n        let out = serializeKey(key);\n        if (value[0] === true) {\n            out += serializeParameters(value[1]);\n        }\n        else {\n            out += '=';\n            if ((0, util_1.isInnerList)(value)) {\n                out += serializeInnerList(value);\n            }\n            else {\n                out += serializeItem(value);\n            }\n        }\n        return out;\n    }).join(', ');\n}\nexports.serializeDictionary = serializeDictionary;\nfunction serializeItem(input) {\n    return serializeBareItem(input[0]) + serializeParameters(input[1]);\n}\nexports.serializeItem = serializeItem;\nfunction serializeInnerList(input) {\n    return `(${input[0].map(value => serializeItem(value)).join(' ')})${serializeParameters(input[1])}`;\n}\nexports.serializeInnerList = serializeInnerList;\nfunction serializeBareItem(input) {\n    if (typeof input === 'number') {\n        if (Number.isInteger(input)) {\n            return serializeInteger(input);\n        }\n        return serializeDecimal(input);\n    }\n    if (typeof input === 'string') {\n        return serializeString(input);\n    }\n    if (input instanceof token_1.Token) {\n        return serializeToken(input);\n    }\n    if (input instanceof types_1.ByteSequence) {\n        return serializeByteSequence(input);\n    }\n    if (typeof input === 'boolean') {\n        return serializeBoolean(input);\n    }\n    throw new SerializeError(`Cannot serialize values of type ${typeof input}`);\n}\nexports.serializeBareItem = serializeBareItem;\nfunction serializeInteger(input) {\n    if (input < -999999999999999 || input > 999999999999999) {\n        throw new SerializeError('Structured headers can only encode integers in the range range of -999,999,999,999,999 to 999,999,999,999,999 inclusive');\n    }\n    return input.toString();\n}\nexports.serializeInteger = serializeInteger;\nfunction serializeDecimal(input) {\n    const out = input.toFixed(3).replace(/0+$/, '');\n    const signifantDigits = out.split('.')[0].replace('-', '').length;\n    if (signifantDigits > 12) {\n        throw new SerializeError('Fractional numbers are not allowed to have more than 12 significant digits before the decimal point');\n    }\n    return out;\n}\nexports.serializeDecimal = serializeDecimal;\nfunction serializeString(input) {\n    if (!(0, util_1.isAscii)(input)) {\n        throw new SerializeError('Only ASCII strings may be serialized');\n    }\n    return `\"${input.replace(/(\"|\\\\)/g, (v) => '\\\\' + v)}\"`;\n}\nexports.serializeString = serializeString;\nfunction serializeBoolean(input) {\n    return input ? '?1' : '?0';\n}\nexports.serializeBoolean = serializeBoolean;\nfunction serializeByteSequence(input) {\n    return `:${input.toBase64()}:`;\n}\nexports.serializeByteSequence = serializeByteSequence;\nfunction serializeToken(input) {\n    return input.toString();\n}\nexports.serializeToken = serializeToken;\nfunction serializeParameters(input) {\n    return Array.from(input).map(([key, value]) => {\n        let out = ';' + serializeKey(key);\n        if (value !== true) {\n            out += '=' + serializeBareItem(value);\n        }\n        return out;\n    }).join('');\n}\nexports.serializeParameters = serializeParameters;\nfunction serializeKey(input) {\n    if (!(0, util_1.isValidKeyStr)(input)) {\n        throw new SerializeError('Keys in dictionaries must only contain lowercase letter, numbers, _-*. and must start with a letter or *');\n    }\n    return input;\n}\nexports.serializeKey = serializeKey;\n//# sourceMappingURL=serializer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Token = void 0;\nconst util_1 = require(\"./util\");\nclass Token {\n    constructor(value) {\n        if (!(0, util_1.isValidTokenStr)(value)) {\n            throw new TypeError('Invalid character in Token string. Tokens must start with *, A-Z and the rest of the string may only contain a-z, A-Z, 0-9, :/!#$%&\\'*+-.^_`|~');\n        }\n        this.value = value;\n    }\n    toString() {\n        return this.value;\n    }\n}\nexports.Token = Token;\n//# sourceMappingURL=token.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ByteSequence = void 0;\nclass ByteSequence {\n    constructor(base64Value) {\n        this.base64Value = base64Value;\n    }\n    toBase64() {\n        return this.base64Value;\n    }\n}\nexports.ByteSequence = ByteSequence;\n//# sourceMappingURL=types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isByteSequence = exports.isInnerList = exports.isValidKeyStr = exports.isValidTokenStr = exports.isAscii = void 0;\nconst asciiRe = /^[\\x20-\\x7E]*$/;\nconst tokenRe = /^[a-zA-Z*][:/!#$%&'*+\\-.^_`|~A-Za-z0-9]*$/;\nconst keyRe = /^[a-z*][*\\-_.a-z0-9]*$/;\nfunction isAscii(str) {\n    return asciiRe.test(str);\n}\nexports.isAscii = isAscii;\nfunction isValidTokenStr(str) {\n    return tokenRe.test(str);\n}\nexports.isValidTokenStr = isValidTokenStr;\nfunction isValidKeyStr(str) {\n    return keyRe.test(str);\n}\nexports.isValidKeyStr = isValidKeyStr;\nfunction isInnerList(input) {\n    return Array.isArray(input[0]);\n}\nexports.isInnerList = isInnerList;\nfunction isByteSequence(input) {\n    return typeof input === 'object' && 'base64Value' in input;\n}\nexports.isByteSequence = isByteSequence;\n//# sourceMappingURL=util.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(590);\n"],"names":["__createBinding","this","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__exportStar","exports","p","prototype","hasOwnProperty","call","value","Token","token_1","ParseError","parseItem","parseList","parseDictionary","types_1","util_1","input","Parser","Error","constructor","position","message","super","pos","skipWS","dictionary","Map","eof","thisKey","parseKey","member","lookChar","parseItemOrInnerList","parseParameters","set","skipOWS","expectChar","members","push","standaloneItem","result","parseBareItem","checkTrail","parseInnerList","innerList","nextChar","char","match","parseIntegerOrDecimal","parseString","parseToken","parseByteSequence","parseBoolean","parameters","key","type","sign","inputNumber","isDigit","getChar","length","parseInt","endsWith","split","parseFloat","outputString","isAscii","test","endPos","indexOf","b64Content","substring","ByteSequence","c","substr","isDigitRegex","serializeKey","serializeParameters","serializeToken","serializeByteSequence","serializeBoolean","serializeString","serializeDecimal","serializeInteger","serializeBareItem","serializeInnerList","serializeItem","serializeDictionary","serializeList","SerializeError","map","join","Number","isInteger","toString","out","toFixed","replace","v","toBase64","Array","from","isValidKeyStr","isInnerList","entries","isValidTokenStr","TypeError","base64Value","isByteSequence","asciiRe","tokenRe","keyRe","str","isArray","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__"],"sourceRoot":""}