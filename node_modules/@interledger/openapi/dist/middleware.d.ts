import { OpenAPI, RequestOptions } from './';
import Koa from 'koa';
interface ValidationOptions {
    validateRequest?: boolean;
    validateResponse?: boolean;
}
export declare function createValidatorMiddleware<T extends Koa.DefaultContext>(spec: OpenAPI, options: RequestOptions, validationOptions?: ValidationOptions | undefined): (ctx: Koa.Context, next: () => Promise<unknown>) => Promise<void>;
export declare class OpenAPIValidatorMiddlewareError extends Error {
    status?: number;
    constructor(message: string, status?: number);
}
export {};
